{
	"id": "91ceaa4382f2b5930d971360bf2eb0a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"SupplyChain.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nimport \"./Structure.sol\";\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\";\r\n\r\ncontract SupplyChain is Ownable{\r\n    //product code\r\n    uint256 public uid;\r\n    uint256 private sku;\r\n\r\n    mapping(uint256 => Structure.Product) products;\r\n    mapping(uint256 => Structure.ProductHistory) productHistory;\r\n    mapping(address => Structure.Roles) roles;\r\n\r\n    constructor() payable{\r\n        sku = 1;\r\n        uid = 1;\r\n    }\r\n\r\n    //============= ADD ROLES =====================\r\n    event FarmerAdded(address indexed _account);\r\n\r\n    function hasFarmerRole(address _account) public view returns (bool) {\r\n        require(_account != address(0));\r\n        return roles[_account].Farmer;\r\n    }\r\n\r\n    function addFarmerRole(address _account) public {\r\n        require(_account != address(0));\r\n        require(!hasFarmerRole(_account));\r\n\r\n        roles[_account].Farmer = true;\r\n        emit FarmerAdded(_account);\r\n    }\r\n\r\n    //============================================\r\n\r\n    //=============== MODIFIER ===================\r\n\r\n    event ProducedByFarmer(uint256 uid);\r\n\r\n    modifier producedByFarmer(uint256 _uid) {\r\n        require(products[_uid].productState == Structure.State.ProducedByFarmer);\r\n        _;\r\n    }\r\n\r\n    modifier shippedByFarmer(uint256 _uid) {\r\n        require(products[_uid].productState == Structure.State.ShippedByFarmer);\r\n        _;\r\n    }\r\n\r\n    //============================================\r\n\r\n    //=============== CHAIN FUNCTION ===================\r\n\r\n    function initEmptyProductInfo(Structure.Product memory product) internal pure{\r\n        address distributor;\r\n        address retailer;\r\n        address customer;\r\n        string memory transaction;\r\n\r\n        product.distributor.distributor = distributor;\r\n        product.retailer.retailer = retailer;\r\n        product.customer.customer = customer;\r\n        product.transaction = transaction;\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"Structure.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\nlibrary Structure{\r\n    enum State{\r\n        ProducedByFarmer,\r\n        PurchaseByDistributor,\r\n        ShippedByFarmer\r\n    }\r\n\r\n    struct FarmerDetail{\r\n        address farmer;\r\n        string farmerName;\r\n        string farmerAddress;\r\n    }\r\n\r\n    struct DistributorDetail{\r\n        address distributor;\r\n    }\r\n\r\n    struct RetailerDetail{\r\n        address retailer;\r\n    }\r\n\r\n    struct CustomerDetail{\r\n        address customer;\r\n    }\r\n\r\n    struct ProductDetail{\r\n        string productName;\r\n        uint256 productCode;\r\n        uint256 productPrice;\r\n    }\r\n\r\n    struct Product {\r\n        uint256 uid;\r\n        uint256 sku;\r\n        address owner;\r\n        State productState;\r\n        ProductDetail productdetail;\r\n        FarmerDetail farmer;\r\n        DistributorDetail distributor;\r\n        RetailerDetail retailer;\r\n        CustomerDetail customer;\r\n        string transaction;\r\n    }\r\n\r\n    struct ProductHistory {\r\n        Product[] history;\r\n    }\r\n\r\n    struct Roles {\r\n        bool Farmer;\r\n        bool Distributor;\r\n        bool Retailer;\r\n        bool Customer;\r\n    }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Structure.sol": {
				"Structure": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Structure.sol\":74:1171  library Structure{\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Structure.sol\":74:1171  library Structure{\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204f747b428021eeb2217ffe10373e11718f401e5b1687f5682a636fb40b65ddf164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f747b428021eeb2217ffe10373e11718f401e5b1687f5682a636fb40b65ddf164736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH21 0x7B428021EEB2217FFE10373E11718F401E5B1687F5 PUSH9 0x2A636FB40B65DDF164 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "74:1097:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f747b428021eeb2217ffe10373e11718f401e5b1687f5682a636fb40b65ddf164736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH21 0x7B428021EEB2217FFE10373E11718F401E5B1687F5 PUSH9 0x2A636FB40B65DDF164 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "74:1097:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 74,
									"end": 1171,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f747b428021eeb2217ffe10373e11718f401e5b1687f5682a636fb40b65ddf164736f6c63430008070033",
									".code": [
										{
											"begin": 74,
											"end": 1171,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1171,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1171,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 74,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74,
											"end": 1171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74,
											"end": 1171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74,
											"end": 1171,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Structure.sol\":\"Structure\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Structure.sol\":{\"keccak256\":\"0x4781a44d6358d25bf5921f68c99491fc1aab2f82231c08f1d345f64d21300226\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1cf8bbddbc7990b81458ccd0592d8174fa71a7a36137e0c5c01ffe5b456a392\",\"dweb:/ipfs/QmbQkH5hMfbQPeqau4gqmBskJz3dpxdpTNw9EvCbgJivHc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SupplyChain.sol": {
				"SupplyChain": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "FarmerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "uid",
									"type": "uint256"
								}
							],
							"name": "ProducedByFarmer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "addFarmerRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "hasFarmerRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SupplyChain.sol\":210:2033  contract SupplyChain is Ownable{\r... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"SupplyChain.sol\":528:529  1 */\n  0x01\n    /* \"SupplyChain.sol\":522:525  sku */\n  0x02\n    /* \"SupplyChain.sol\":522:529  sku = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SupplyChain.sol\":546:547  1 */\n  0x01\n    /* \"SupplyChain.sol\":540:543  uid */\n  dup1\n    /* \"SupplyChain.sol\":540:547  uid = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SupplyChain.sol\":210:2033  contract SupplyChain is Ownable{\r... */\n  jump(tag_9)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"SupplyChain.sol\":210:2033  contract SupplyChain is Ownable{\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SupplyChain.sol\":210:2033  contract SupplyChain is Ownable{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf514ce36\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf61104b8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfcec18bf\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"SupplyChain.sol\":268:286  uint256 public uid */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SupplyChain.sol\":834:1055  function addFarmerRole(address _account) public {\r... */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"SupplyChain.sol\":668:826  function hasFarmerRole(address _account) public view returns (bool) {\r... */\n    tag_8:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_32\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_35\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_36\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_35:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_39\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_33\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_39:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_42\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_36\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SupplyChain.sol\":268:286  uint256 public uid */\n    tag_20:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"SupplyChain.sol\":834:1055  function addFarmerRole(address _account) public {\r... */\n    tag_25:\n        /* \"SupplyChain.sol\":921:922  0 */\n      0x00\n        /* \"SupplyChain.sol\":901:923  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SupplyChain.sol\":901:909  _account */\n      dup2\n        /* \"SupplyChain.sol\":901:923  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"SupplyChain.sol\":893:924  require(_account != address(0)) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"SupplyChain.sol\":944:967  hasFarmerRole(_account) */\n      tag_47\n        /* \"SupplyChain.sol\":958:966  _account */\n      dup2\n        /* \"SupplyChain.sol\":944:957  hasFarmerRole */\n      tag_28\n        /* \"SupplyChain.sol\":944:967  hasFarmerRole(_account) */\n      jump\t// in\n    tag_47:\n        /* \"SupplyChain.sol\":943:967  !hasFarmerRole(_account) */\n      iszero\n        /* \"SupplyChain.sol\":935:968  require(!hasFarmerRole(_account)) */\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n        /* \"SupplyChain.sol\":1006:1010  true */\n      0x01\n        /* \"SupplyChain.sol\":981:986  roles */\n      0x05\n        /* \"SupplyChain.sol\":981:996  roles[_account] */\n      0x00\n        /* \"SupplyChain.sol\":987:995  _account */\n      dup4\n        /* \"SupplyChain.sol\":981:996  roles[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SupplyChain.sol\":981:1003  roles[_account].Farmer */\n      0x00\n      add\n      0x00\n        /* \"SupplyChain.sol\":981:1010  roles[_account].Farmer = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SupplyChain.sol\":1038:1046  _account */\n      dup1\n        /* \"SupplyChain.sol\":1026:1047  FarmerAdded(_account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e0ded4123377a3c2bc9a26f1717655a129e2f20752924d42e730ec89c83dbd0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SupplyChain.sol\":834:1055  function addFarmerRole(address _account) public {\r... */\n      pop\n      jump\t// out\n        /* \"SupplyChain.sol\":668:826  function hasFarmerRole(address _account) public view returns (bool) {\r... */\n    tag_28:\n        /* \"SupplyChain.sol\":730:734  bool */\n      0x00\n        /* \"SupplyChain.sol\":775:776  0 */\n      dup1\n        /* \"SupplyChain.sol\":755:777  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SupplyChain.sol\":755:763  _account */\n      dup3\n        /* \"SupplyChain.sol\":755:777  _account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"SupplyChain.sol\":747:778  require(_account != address(0)) */\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n        /* \"SupplyChain.sol\":796:801  roles */\n      0x05\n        /* \"SupplyChain.sol\":796:811  roles[_account] */\n      0x00\n        /* \"SupplyChain.sol\":802:810  _account */\n      dup4\n        /* \"SupplyChain.sol\":796:811  roles[_account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SupplyChain.sol\":796:818  roles[_account].Farmer */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SupplyChain.sol\":789:818  return roles[_account].Farmer */\n      swap1\n      pop\n        /* \"SupplyChain.sol\":668:826  function hasFarmerRole(address _account) public view returns (bool) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_33:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_52\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_53\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_54\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_12\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_54:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_55\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_36:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_53:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_61:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_63\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_17:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":228:347   */\n    tag_66:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_69\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_61\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_70:\n        /* \"#utility.yul\":574:598   */\n      tag_72\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:720   */\n    tag_74:\n        /* \"#utility.yul\":692:713   */\n      tag_76\n        /* \"#utility.yul\":707:712   */\n      dup2\n        /* \"#utility.yul\":692:713   */\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":687:690   */\n      dup3\n        /* \"#utility.yul\":680:714   */\n      mstore\n        /* \"#utility.yul\":611:720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":726:1092   */\n    tag_78:\n        /* \"#utility.yul\":868:871   */\n      0x00\n        /* \"#utility.yul\":889:956   */\n      tag_80\n        /* \"#utility.yul\":953:955   */\n      0x26\n        /* \"#utility.yul\":948:951   */\n      dup4\n        /* \"#utility.yul\":889:956   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":882:956   */\n      swap2\n      pop\n        /* \"#utility.yul\":965:1058   */\n      tag_82\n        /* \"#utility.yul\":1054:1057   */\n      dup3\n        /* \"#utility.yul\":965:1058   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1083:1085   */\n      0x40\n        /* \"#utility.yul\":1078:1081   */\n      dup3\n        /* \"#utility.yul\":1074:1086   */\n      add\n        /* \"#utility.yul\":1067:1086   */\n      swap1\n      pop\n        /* \"#utility.yul\":726:1092   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1098:1464   */\n    tag_84:\n        /* \"#utility.yul\":1240:1243   */\n      0x00\n        /* \"#utility.yul\":1261:1328   */\n      tag_86\n        /* \"#utility.yul\":1325:1327   */\n      0x20\n        /* \"#utility.yul\":1320:1323   */\n      dup4\n        /* \"#utility.yul\":1261:1328   */\n      tag_81\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1254:1328   */\n      swap2\n      pop\n        /* \"#utility.yul\":1337:1430   */\n      tag_87\n        /* \"#utility.yul\":1426:1429   */\n      dup3\n        /* \"#utility.yul\":1337:1430   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1450:1453   */\n      dup3\n        /* \"#utility.yul\":1446:1458   */\n      add\n        /* \"#utility.yul\":1439:1458   */\n      swap1\n      pop\n        /* \"#utility.yul\":1098:1464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1470:1588   */\n    tag_89:\n        /* \"#utility.yul\":1557:1581   */\n      tag_91\n        /* \"#utility.yul\":1575:1580   */\n      dup2\n        /* \"#utility.yul\":1557:1581   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":1552:1555   */\n      dup3\n        /* \"#utility.yul\":1545:1582   */\n      mstore\n        /* \"#utility.yul\":1470:1588   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1594:1816   */\n    tag_14:\n        /* \"#utility.yul\":1687:1691   */\n      0x00\n        /* \"#utility.yul\":1725:1727   */\n      0x20\n        /* \"#utility.yul\":1714:1723   */\n      dup3\n        /* \"#utility.yul\":1710:1728   */\n      add\n        /* \"#utility.yul\":1702:1728   */\n      swap1\n      pop\n        /* \"#utility.yul\":1738:1809   */\n      tag_94\n        /* \"#utility.yul\":1806:1807   */\n      0x00\n        /* \"#utility.yul\":1795:1804   */\n      dup4\n        /* \"#utility.yul\":1791:1808   */\n      add\n        /* \"#utility.yul\":1782:1788   */\n      dup5\n        /* \"#utility.yul\":1738:1809   */\n      tag_70\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1594:1816   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:2032   */\n    tag_30:\n        /* \"#utility.yul\":1909:1913   */\n      0x00\n        /* \"#utility.yul\":1947:1949   */\n      0x20\n        /* \"#utility.yul\":1936:1945   */\n      dup3\n        /* \"#utility.yul\":1932:1950   */\n      add\n        /* \"#utility.yul\":1924:1950   */\n      swap1\n      pop\n        /* \"#utility.yul\":1960:2025   */\n      tag_96\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1960:2025   */\n      tag_74\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1822:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2457   */\n    tag_43:\n        /* \"#utility.yul\":2204:2208   */\n      0x00\n        /* \"#utility.yul\":2242:2244   */\n      0x20\n        /* \"#utility.yul\":2231:2240   */\n      dup3\n        /* \"#utility.yul\":2227:2245   */\n      add\n        /* \"#utility.yul\":2219:2245   */\n      swap1\n      pop\n        /* \"#utility.yul\":2291:2300   */\n      dup2\n        /* \"#utility.yul\":2285:2289   */\n      dup2\n        /* \"#utility.yul\":2281:2301   */\n      sub\n        /* \"#utility.yul\":2277:2278   */\n      0x00\n        /* \"#utility.yul\":2266:2275   */\n      dup4\n        /* \"#utility.yul\":2262:2279   */\n      add\n        /* \"#utility.yul\":2255:2302   */\n      mstore\n        /* \"#utility.yul\":2319:2450   */\n      tag_98\n        /* \"#utility.yul\":2445:2449   */\n      dup2\n        /* \"#utility.yul\":2319:2450   */\n      tag_78\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":2311:2450   */\n      swap1\n      pop\n        /* \"#utility.yul\":2038:2457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2463:2882   */\n    tag_57:\n        /* \"#utility.yul\":2629:2633   */\n      0x00\n        /* \"#utility.yul\":2667:2669   */\n      0x20\n        /* \"#utility.yul\":2656:2665   */\n      dup3\n        /* \"#utility.yul\":2652:2670   */\n      add\n        /* \"#utility.yul\":2644:2670   */\n      swap1\n      pop\n        /* \"#utility.yul\":2716:2725   */\n      dup2\n        /* \"#utility.yul\":2710:2714   */\n      dup2\n        /* \"#utility.yul\":2706:2726   */\n      sub\n        /* \"#utility.yul\":2702:2703   */\n      0x00\n        /* \"#utility.yul\":2691:2700   */\n      dup4\n        /* \"#utility.yul\":2687:2704   */\n      add\n        /* \"#utility.yul\":2680:2727   */\n      mstore\n        /* \"#utility.yul\":2744:2875   */\n      tag_100\n        /* \"#utility.yul\":2870:2874   */\n      dup2\n        /* \"#utility.yul\":2744:2875   */\n      tag_84\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2736:2875   */\n      swap1\n      pop\n        /* \"#utility.yul\":2463:2882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2888:3110   */\n    tag_22:\n        /* \"#utility.yul\":2981:2985   */\n      0x00\n        /* \"#utility.yul\":3019:3021   */\n      0x20\n        /* \"#utility.yul\":3008:3017   */\n      dup3\n        /* \"#utility.yul\":3004:3022   */\n      add\n        /* \"#utility.yul\":2996:3022   */\n      swap1\n      pop\n        /* \"#utility.yul\":3032:3103   */\n      tag_102\n        /* \"#utility.yul\":3100:3101   */\n      0x00\n        /* \"#utility.yul\":3089:3098   */\n      dup4\n        /* \"#utility.yul\":3085:3102   */\n      add\n        /* \"#utility.yul\":3076:3082   */\n      dup5\n        /* \"#utility.yul\":3032:3103   */\n      tag_89\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2888:3110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3197:3366   */\n    tag_81:\n        /* \"#utility.yul\":3281:3292   */\n      0x00\n        /* \"#utility.yul\":3315:3321   */\n      dup3\n        /* \"#utility.yul\":3310:3313   */\n      dup3\n        /* \"#utility.yul\":3303:3322   */\n      mstore\n        /* \"#utility.yul\":3355:3359   */\n      0x20\n        /* \"#utility.yul\":3350:3353   */\n      dup3\n        /* \"#utility.yul\":3346:3360   */\n      add\n        /* \"#utility.yul\":3331:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3197:3366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3372:3468   */\n    tag_73:\n        /* \"#utility.yul\":3409:3416   */\n      0x00\n        /* \"#utility.yul\":3438:3462   */\n      tag_107\n        /* \"#utility.yul\":3456:3461   */\n      dup3\n        /* \"#utility.yul\":3438:3462   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3427:3462   */\n      swap1\n      pop\n        /* \"#utility.yul\":3372:3468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3474:3564   */\n    tag_77:\n        /* \"#utility.yul\":3508:3515   */\n      0x00\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3544:3557   */\n      iszero\n        /* \"#utility.yul\":3537:3558   */\n      iszero\n        /* \"#utility.yul\":3526:3558   */\n      swap1\n      pop\n        /* \"#utility.yul\":3474:3564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3696   */\n    tag_108:\n        /* \"#utility.yul\":3607:3614   */\n      0x00\n        /* \"#utility.yul\":3647:3689   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3640:3645   */\n      dup3\n        /* \"#utility.yul\":3636:3690   */\n      and\n        /* \"#utility.yul\":3625:3690   */\n      swap1\n      pop\n        /* \"#utility.yul\":3570:3696   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3702:3779   */\n    tag_92:\n        /* \"#utility.yul\":3739:3746   */\n      0x00\n        /* \"#utility.yul\":3768:3773   */\n      dup2\n        /* \"#utility.yul\":3757:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3702:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3908:4025   */\n    tag_68:\n        /* \"#utility.yul\":4017:4018   */\n      0x00\n        /* \"#utility.yul\":4014:4015   */\n      dup1\n        /* \"#utility.yul\":4007:4019   */\n      revert\n        /* \"#utility.yul\":4031:4256   */\n    tag_83:\n        /* \"#utility.yul\":4171:4205   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4167:4168   */\n      0x00\n        /* \"#utility.yul\":4159:4165   */\n      dup3\n        /* \"#utility.yul\":4155:4169   */\n      add\n        /* \"#utility.yul\":4148:4206   */\n      mstore\n        /* \"#utility.yul\":4240:4248   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4235:4237   */\n      0x20\n        /* \"#utility.yul\":4227:4233   */\n      dup3\n        /* \"#utility.yul\":4223:4238   */\n      add\n        /* \"#utility.yul\":4216:4249   */\n      mstore\n        /* \"#utility.yul\":4031:4256   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4262:4444   */\n    tag_88:\n        /* \"#utility.yul\":4402:4436   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4398:4399   */\n      0x00\n        /* \"#utility.yul\":4390:4396   */\n      dup3\n        /* \"#utility.yul\":4386:4400   */\n      add\n        /* \"#utility.yul\":4379:4437   */\n      mstore\n        /* \"#utility.yul\":4262:4444   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4450:4572   */\n    tag_64:\n        /* \"#utility.yul\":4523:4547   */\n      tag_118\n        /* \"#utility.yul\":4541:4546   */\n      dup2\n        /* \"#utility.yul\":4523:4547   */\n      tag_73\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4516:4521   */\n      dup2\n        /* \"#utility.yul\":4513:4548   */\n      eq\n        /* \"#utility.yul\":4503:4566   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":4562:4563   */\n      0x00\n        /* \"#utility.yul\":4559:4560   */\n      dup1\n        /* \"#utility.yul\":4552:4564   */\n      revert\n        /* \"#utility.yul\":4503:4566   */\n    tag_119:\n        /* \"#utility.yul\":4450:4572   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220654b53ca5e9e6b737a76be2dd9f39d03f8686dbb39e1a0ceacde71642a2ee54064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_107": {
									"entryPoint": null,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_379": {
									"entryPoint": 52,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_366": {
									"entryPoint": 60,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405261002061001561003460201b60201c565b61003c60201b60201c565b600160028190555060018081905550610100565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61070f8061010f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063f2fde38b1461008f578063f514ce36146100ab578063f61104b8146100c9578063fcec18bf146100e5575b600080fd5b61006f610115565b005b610079610129565b604051610086919061055b565b60405180910390f35b6100a960048036038101906100a491906104bb565b610152565b005b6100b36101d6565b6040516100c091906105d1565b60405180910390f35b6100e360048036038101906100de91906104bb565b6101dc565b005b6100ff60048036038101906100fa91906104bb565b6102ca565b60405161010c9190610576565b60405180910390f35b61011d61035c565b61012760006103da565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61015a61035c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c190610591565b60405180910390fd5b6101d3816103da565b50565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561021657600080fd5b61021f816102ca565b1561022957600080fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f2e0ded4123377a3c2bc9a26f1717655a129e2f20752924d42e730ec89c83dbd060405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561030557600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b61036461049e565b73ffffffffffffffffffffffffffffffffffffffff16610382610129565b73ffffffffffffffffffffffffffffffffffffffff16146103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf906105b1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000813590506104b5816106c2565b92915050565b6000602082840312156104d1576104d0610645565b5b60006104df848285016104a6565b91505092915050565b6104f1816105fd565b82525050565b6105008161060f565b82525050565b60006105136026836105ec565b915061051e8261064a565b604082019050919050565b60006105366020836105ec565b915061054182610699565b602082019050919050565b6105558161063b565b82525050565b600060208201905061057060008301846104e8565b92915050565b600060208201905061058b60008301846104f7565b92915050565b600060208201905081810360008301526105aa81610506565b9050919050565b600060208201905081810360008301526105ca81610529565b9050919050565b60006020820190506105e6600083018461054c565b92915050565b600082825260208201905092915050565b60006106088261061b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6106cb816105fd565b81146106d657600080fd5b5056fea2646970667358221220654b53ca5e9e6b737a76be2dd9f39d03f8686dbb39e1a0ceacde71642a2ee54064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x20 PUSH2 0x15 PUSH2 0x34 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x100 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x70F DUP1 PUSH2 0x10F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xF514CE36 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xF61104B8 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xFCEC18BF EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x115 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB3 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x35C JUMP JUMPDEST PUSH2 0x127 PUSH1 0x0 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x35C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D3 DUP2 PUSH2 0x3DA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F DUP2 PUSH2 0x2CA JUMP JUMPDEST ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2E0DED4123377A3C2BC9A26F1717655A129E2F20752924D42E730EC89C83DBD0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364 PUSH2 0x49E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x382 PUSH2 0x129 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4B5 DUP2 PUSH2 0x6C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x645 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4DF DUP5 DUP3 DUP6 ADD PUSH2 0x4A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F1 DUP2 PUSH2 0x5FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x500 DUP2 PUSH2 0x60F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x513 PUSH1 0x26 DUP4 PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP PUSH2 0x51E DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x536 PUSH1 0x20 DUP4 PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP PUSH2 0x541 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH2 0x63B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x570 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x58B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AA DUP2 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CA DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x54C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x608 DUP3 PUSH2 0x61B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x6CB DUP2 PUSH2 0x5FD JUMP JUMPDEST DUP2 EQ PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x4B53CA5E9E6B PUSH20 0x7A76BE2DD9F39D03F8686DBB39E1A0CEACDE7164 0x2A 0x2E 0xE5 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "210:1823:1:-:0;;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;528:1:1;522:3;:7;;;;546:1;540:3;:7;;;;210:1823;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;210:1823:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_309": {
									"entryPoint": 860,
									"id": 309,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_379": {
									"entryPoint": 1182,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_366": {
									"entryPoint": 986,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addFarmerRole_166": {
									"entryPoint": 476,
									"id": 166,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@hasFarmerRole_133": {
									"entryPoint": 714,
									"id": 133,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_295": {
									"entryPoint": 297,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_323": {
									"entryPoint": 277,
									"id": 323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_346": {
									"entryPoint": 338,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uid_78": {
									"entryPoint": 470,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 1610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4575:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:4"
															},
															"nodeType": "YulIf",
															"src": "228:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:4",
														"type": ""
													}
												],
												"src": "152:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:4",
														"type": ""
													}
												],
												"src": "487:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "687:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "707:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "692:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "692:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "680:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "680:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "658:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "665:3:4",
														"type": ""
													}
												],
												"src": "611:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "872:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "882:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "948:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "953:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "889:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "882:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1054:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "965:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "965:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1067:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1078:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1083:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1067:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "860:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "868:3:4",
														"type": ""
													}
												],
												"src": "726:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1244:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1254:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1320:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1261:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1261:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1254:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1426:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "1337:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1337:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1337:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1439:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1450:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1446:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1439:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1232:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1240:3:4",
														"type": ""
													}
												],
												"src": "1098:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1552:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1575:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1557:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1557:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1545:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1545:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1523:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1530:3:4",
														"type": ""
													}
												],
												"src": "1470:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1692:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1702:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1714:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1725:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1710:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1702:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1782:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1795:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1806:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1738:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1738:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1738:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1664:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1676:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1687:4:4",
														"type": ""
													}
												],
												"src": "1594:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1914:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1924:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1936:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1947:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1932:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1932:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1924:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1960:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1960:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1886:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1898:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1909:4:4",
														"type": ""
													}
												],
												"src": "1822:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2209:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2219:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2231:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2242:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2219:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2266:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2277:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2262:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2262:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2285:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2291:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2281:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2281:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2255:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2255:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2255:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2311:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2445:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2319:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2311:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2189:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2204:4:4",
														"type": ""
													}
												],
												"src": "2038:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2634:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2644:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2656:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2652:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2644:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2691:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2702:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2687:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2710:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2706:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2706:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2680:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2680:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2736:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2870:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2744:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2736:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2614:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2629:4:4",
														"type": ""
													}
												],
												"src": "2463:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2996:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3008:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3019:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3004:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2996:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3076:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3100:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3085:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3032:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3032:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3032:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2958:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2970:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2981:4:4",
														"type": ""
													}
												],
												"src": "2888:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3156:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3166:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3182:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3176:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3166:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3149:6:4",
														"type": ""
													}
												],
												"src": "3116:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3293:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3310:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3315:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3303:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3303:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3331:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3350:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3346:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3346:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3331:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3265:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3270:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3281:11:4",
														"type": ""
													}
												],
												"src": "3197:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3417:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3427:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3456:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3438:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3427:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3399:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3409:7:4",
														"type": ""
													}
												],
												"src": "3372:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3516:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3526:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3544:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3544:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3537:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3526:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3498:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3508:7:4",
														"type": ""
													}
												],
												"src": "3474:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3615:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3625:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3640:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3647:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3636:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3625:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3597:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3607:7:4",
														"type": ""
													}
												],
												"src": "3570:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3747:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3757:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3768:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3757:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3729:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3739:7:4",
														"type": ""
													}
												],
												"src": "3702:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3874:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3891:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3894:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3884:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3884:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3785:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3997:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4014:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4017:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4007:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4007:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4007:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3908:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4137:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4159:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4167:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4155:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4155:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4171:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4148:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4227:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4235:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4223:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4240:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4216:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4216:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4129:6:4",
														"type": ""
													}
												],
												"src": "4031:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4368:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4390:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4398:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4386:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4386:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4402:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4379:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4379:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4379:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4360:6:4",
														"type": ""
													}
												],
												"src": "4262:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4550:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4559:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4562:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4552:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4552:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4552:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4516:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4541:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4523:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4523:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4513:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4513:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4506:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:43:4"
															},
															"nodeType": "YulIf",
															"src": "4503:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4486:5:4",
														"type": ""
													}
												],
												"src": "4450:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638da5cb5b14610071578063f2fde38b1461008f578063f514ce36146100ab578063f61104b8146100c9578063fcec18bf146100e5575b600080fd5b61006f610115565b005b610079610129565b604051610086919061055b565b60405180910390f35b6100a960048036038101906100a491906104bb565b610152565b005b6100b36101d6565b6040516100c091906105d1565b60405180910390f35b6100e360048036038101906100de91906104bb565b6101dc565b005b6100ff60048036038101906100fa91906104bb565b6102ca565b60405161010c9190610576565b60405180910390f35b61011d61035c565b61012760006103da565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61015a61035c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c190610591565b60405180910390fd5b6101d3816103da565b50565b60015481565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561021657600080fd5b61021f816102ca565b1561022957600080fd5b6001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f2e0ded4123377a3c2bc9a26f1717655a129e2f20752924d42e730ec89c83dbd060405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561030557600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff169050919050565b61036461049e565b73ffffffffffffffffffffffffffffffffffffffff16610382610129565b73ffffffffffffffffffffffffffffffffffffffff16146103d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103cf906105b1565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000813590506104b5816106c2565b92915050565b6000602082840312156104d1576104d0610645565b5b60006104df848285016104a6565b91505092915050565b6104f1816105fd565b82525050565b6105008161060f565b82525050565b60006105136026836105ec565b915061051e8261064a565b604082019050919050565b60006105366020836105ec565b915061054182610699565b602082019050919050565b6105558161063b565b82525050565b600060208201905061057060008301846104e8565b92915050565b600060208201905061058b60008301846104f7565b92915050565b600060208201905081810360008301526105aa81610506565b9050919050565b600060208201905081810360008301526105ca81610529565b9050919050565b60006020820190506105e6600083018461054c565b92915050565b600082825260208201905092915050565b60006106088261061b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6106cb816105fd565b81146106d657600080fd5b5056fea2646970667358221220654b53ca5e9e6b737a76be2dd9f39d03f8686dbb39e1a0ceacde71642a2ee54064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xF514CE36 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0xF61104B8 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xFCEC18BF EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x115 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x79 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x152 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB3 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC0 SWAP2 SWAP1 PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDE SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x1DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x2CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x35C JUMP JUMPDEST PUSH2 0x127 PUSH1 0x0 PUSH2 0x3DA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x15A PUSH2 0x35C JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C1 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D3 DUP2 PUSH2 0x3DA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21F DUP2 PUSH2 0x2CA JUMP JUMPDEST ISZERO PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2E0DED4123377A3C2BC9A26F1717655A129E2F20752924D42E730EC89C83DBD0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364 PUSH2 0x49E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x382 PUSH2 0x129 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CF SWAP1 PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4B5 DUP2 PUSH2 0x6C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D1 JUMPI PUSH2 0x4D0 PUSH2 0x645 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4DF DUP5 DUP3 DUP6 ADD PUSH2 0x4A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F1 DUP2 PUSH2 0x5FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x500 DUP2 PUSH2 0x60F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x513 PUSH1 0x26 DUP4 PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP PUSH2 0x51E DUP3 PUSH2 0x64A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x536 PUSH1 0x20 DUP4 PUSH2 0x5EC JUMP JUMPDEST SWAP2 POP PUSH2 0x541 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x555 DUP2 PUSH2 0x63B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x570 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x58B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x4F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5AA DUP2 PUSH2 0x506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5CA DUP2 PUSH2 0x529 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x54C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x608 DUP3 PUSH2 0x61B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x6CB DUP2 PUSH2 0x5FD JUMP JUMPDEST DUP2 EQ PUSH2 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0x4B53CA5E9E6B PUSH20 0x7A76BE2DD9F39D03F8686DBB39E1A0CEACDE7164 0x2A 0x2E 0xE5 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "210:1823:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:2;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;268:18:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;834:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;668:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2081:198::-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;268:18:1:-;;;;:::o;834:221::-;921:1;901:22;;:8;:22;;;;893:31;;;;;;944:23;958:8;944:13;:23::i;:::-;943:24;935:33;;;;;;1006:4;981:5;:15;987:8;981:15;;;;;;;;;;;;;;;:22;;;:29;;;;;;;;;;;;;;;;;;1038:8;1026:21;;;;;;;;;;;;834:221;:::o;668:158::-;730:4;775:1;755:22;;:8;:22;;;;747:31;;;;;;796:5;:15;802:8;796:15;;;;;;;;;;;;;;;:22;;;;;;;;;;;;789:29;;668:158;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:109::-;692:21;707:5;692:21;:::i;:::-;687:3;680:34;611:109;;:::o;726:366::-;868:3;889:67;953:2;948:3;889:67;:::i;:::-;882:74;;965:93;1054:3;965:93;:::i;:::-;1083:2;1078:3;1074:12;1067:19;;726:366;;;:::o;1098:::-;1240:3;1261:67;1325:2;1320:3;1261:67;:::i;:::-;1254:74;;1337:93;1426:3;1337:93;:::i;:::-;1455:2;1450:3;1446:12;1439:19;;1098:366;;;:::o;1470:118::-;1557:24;1575:5;1557:24;:::i;:::-;1552:3;1545:37;1470:118;;:::o;1594:222::-;1687:4;1725:2;1714:9;1710:18;1702:26;;1738:71;1806:1;1795:9;1791:17;1782:6;1738:71;:::i;:::-;1594:222;;;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:419::-;2204:4;2242:2;2231:9;2227:18;2219:26;;2291:9;2285:4;2281:20;2277:1;2266:9;2262:17;2255:47;2319:131;2445:4;2319:131;:::i;:::-;2311:139;;2038:419;;;:::o;2463:::-;2629:4;2667:2;2656:9;2652:18;2644:26;;2716:9;2710:4;2706:20;2702:1;2691:9;2687:17;2680:47;2744:131;2870:4;2744:131;:::i;:::-;2736:139;;2463:419;;;:::o;2888:222::-;2981:4;3019:2;3008:9;3004:18;2996:26;;3032:71;3100:1;3089:9;3085:17;3076:6;3032:71;:::i;:::-;2888:222;;;;:::o;3197:169::-;3281:11;3315:6;3310:3;3303:19;3355:4;3350:3;3346:14;3331:29;;3197:169;;;;:::o;3372:96::-;3409:7;3438:24;3456:5;3438:24;:::i;:::-;3427:35;;3372:96;;;:::o;3474:90::-;3508:7;3551:5;3544:13;3537:21;3526:32;;3474:90;;;:::o;3570:126::-;3607:7;3647:42;3640:5;3636:54;3625:65;;3570:126;;;:::o;3702:77::-;3739:7;3768:5;3757:16;;3702:77;;;:::o;3908:117::-;4017:1;4014;4007:12;4031:225;4171:34;4167:1;4159:6;4155:14;4148:58;4240:8;4235:2;4227:6;4223:15;4216:33;4031:225;:::o;4262:182::-;4402:34;4398:1;4390:6;4386:14;4379:58;4262:182;:::o;4450:122::-;4523:24;4541:5;4523:24;:::i;:::-;4516:5;4513:35;4503:63;;4562:1;4559;4552:12;4503:63;4450:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "361400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addFarmerRole(address)": "28416",
								"hasFarmerRole(address)": "3015",
								"owner()": "2522",
								"renounceOwnership()": "30376",
								"transferOwnership(address)": "30769",
								"uid()": "2473"
							},
							"internal": {
								"initEmptyProductInfo(struct Structure.Product memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 210,
									"end": 2033,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 528,
									"end": 529,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 522,
									"end": 525,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 522,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 522,
									"end": 529,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 522,
									"end": 529,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 522,
									"end": 529,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 546,
									"end": 547,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 540,
									"end": 543,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 547,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 540,
									"end": 547,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 540,
									"end": 547,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 540,
									"end": 547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 210,
									"end": 2033,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220654b53ca5e9e6b737a76be2dd9f39d03f8686dbb39e1a0ceacde71642a2ee54064736f6c63430008070033",
									".code": [
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "F514CE36"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "F61104B8"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "FCEC18BF"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 210,
											"end": 2033,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 268,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 268,
											"end": 286,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 286,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 921,
											"end": 922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 901,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 901,
											"end": 923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 901,
											"end": 909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 901,
											"end": 923,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 901,
											"end": 923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 901,
											"end": 923,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 901,
											"end": 923,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 893,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 893,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 893,
											"end": 924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 893,
											"end": 924,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 893,
											"end": 924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 944,
											"end": 967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 958,
											"end": 966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 944,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 944,
											"end": 967,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 967,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 944,
											"end": 967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 943,
											"end": 967,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 935,
											"end": 968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 935,
											"end": 968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 935,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 968,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 935,
											"end": 968,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 935,
											"end": 968,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 935,
											"end": 968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 981,
											"end": 986,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 981,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 981,
											"end": 996,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 981,
											"end": 996,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 981,
											"end": 996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 981,
											"end": 996,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 996,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 981,
											"end": 1010,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1046,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "2E0DED4123377A3C2BC9A26F1717655A129E2F20752924D42E730EC89C83DBD0"
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1047,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 834,
											"end": 1055,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 755,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 755,
											"end": 777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 755,
											"end": 763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 755,
											"end": 777,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 755,
											"end": 777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 755,
											"end": 777,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 755,
											"end": 777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 747,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 747,
											"end": 778,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 747,
											"end": 778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 778,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 747,
											"end": 778,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 747,
											"end": 778,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 747,
											"end": 778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 796,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 796,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 802,
											"end": 810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 796,
											"end": 811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 796,
											"end": 811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 796,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 811,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 796,
											"end": 818,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 796,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 796,
											"end": 818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 789,
											"end": 818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 789,
											"end": 818,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 668,
											"end": 826,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 707,
											"end": 712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 687,
											"end": 690,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 680,
											"end": 714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 868,
											"end": 871,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 948,
											"end": 951,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 889,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 889,
											"end": 956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 882,
											"end": 956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 882,
											"end": 956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 965,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1078,
											"end": 1081,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1067,
											"end": 1086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 726,
											"end": 1092,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1240,
											"end": 1243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1323,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1261,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1328,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1254,
											"end": 1328,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1426,
											"end": 1429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1337,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1450,
											"end": 1453,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1439,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1464,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1470,
											"end": 1588,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1470,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1575,
											"end": 1580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1552,
											"end": 1555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1545,
											"end": 1582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1588,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1594,
											"end": 1816,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1594,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1687,
											"end": 1691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1727,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1714,
											"end": 1723,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1728,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1804,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1791,
											"end": 1808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1738,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1738,
											"end": 1809,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1738,
											"end": 1809,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 1738,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1816,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2038,
											"end": 2457,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2038,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2204,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2231,
											"end": 2240,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2227,
											"end": 2245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2291,
											"end": 2300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2285,
											"end": 2289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2275,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2279,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2255,
											"end": 2302,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2445,
											"end": 2449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2319,
											"end": 2450,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2319,
											"end": 2450,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2319,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2311,
											"end": 2450,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2311,
											"end": 2450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2457,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2457,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2457,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2457,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2463,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2463,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2669,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2670,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2670,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2670,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2726,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2700,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2680,
											"end": 2727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2870,
											"end": 2874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2744,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2875,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2736,
											"end": 2875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2463,
											"end": 2882,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2888,
											"end": 3110,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2888,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3021,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3022,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3022,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2996,
											"end": 3022,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3098,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3110,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3110,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3110,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 3110,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3197,
											"end": 3366,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 3197,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3281,
											"end": 3292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3313,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3355,
											"end": 3359,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3346,
											"end": 3360,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3366,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3366,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3366,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3366,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3372,
											"end": 3468,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3372,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3409,
											"end": 3416,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3438,
											"end": 3462,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3438,
											"end": 3462,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3438,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3462,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3427,
											"end": 3462,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3372,
											"end": 3468,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3474,
											"end": 3564,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3474,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3544,
											"end": 3557,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3526,
											"end": 3558,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 3564,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 3564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 3564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 3564,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3570,
											"end": 3696,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3570,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3607,
											"end": 3614,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3647,
											"end": 3689,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3640,
											"end": 3645,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3636,
											"end": 3690,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3625,
											"end": 3690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3696,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3570,
											"end": 3696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3702,
											"end": 3779,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3702,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3746,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3773,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3757,
											"end": 3773,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3702,
											"end": 3779,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3908,
											"end": 4025,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3908,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4007,
											"end": 4019,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4256,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4031,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4205,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4167,
											"end": 4168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4165,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4155,
											"end": 4169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4206,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4240,
											"end": 4248,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4235,
											"end": 4237,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4227,
											"end": 4233,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4238,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4216,
											"end": 4249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4256,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4256,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4262,
											"end": 4444,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4262,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4402,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4398,
											"end": 4399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4396,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4386,
											"end": 4400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4262,
											"end": 4444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4262,
											"end": 4444,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4450,
											"end": 4572,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4450,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4523,
											"end": 4547,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4523,
											"end": 4547,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4523,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4516,
											"end": 4521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4513,
											"end": 4548,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4503,
											"end": 4566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4563,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4560,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4564,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4566,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4503,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4450,
											"end": 4572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4450,
											"end": 4572,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addFarmerRole(address)": "f61104b8",
							"hasFarmerRole(address)": "fcec18bf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"uid()": "f514ce36"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"FarmerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"name\":\"ProducedByFarmer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addFarmerRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"hasFarmerRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SupplyChain.sol\":\"SupplyChain\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Structure.sol\":{\"keccak256\":\"0x4781a44d6358d25bf5921f68c99491fc1aab2f82231c08f1d345f64d21300226\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f1cf8bbddbc7990b81458ccd0592d8174fa71a7a36137e0c5c01ffe5b456a392\",\"dweb:/ipfs/QmbQkH5hMfbQPeqau4gqmBskJz3dpxdpTNw9EvCbgJivHc\"]},\"SupplyChain.sol\":{\"keccak256\":\"0x178ea76577ff8f77f48e30089c45df0fb682021350c461e1ad6c24a402dff37b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e189c537201fbd8e78fc59cf36a1c325dc2ba830c6487ebca156355bdad58604\",\"dweb:/ipfs/QmeN1EH1vk3GSa9G3nBMhJRHtnTMKpp2NegEyYJCT8hnj8\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 262,
								"contract": "SupplyChain.sol:SupplyChain",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 78,
								"contract": "SupplyChain.sol:SupplyChain",
								"label": "uid",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 80,
								"contract": "SupplyChain.sol:SupplyChain",
								"label": "sku",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 85,
								"contract": "SupplyChain.sol:SupplyChain",
								"label": "products",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(Product)55_storage)"
							},
							{
								"astId": 90,
								"contract": "SupplyChain.sol:SupplyChain",
								"label": "productHistory",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(ProductHistory)60_storage)"
							},
							{
								"astId": 95,
								"contract": "SupplyChain.sol:SupplyChain",
								"label": "roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Roles)69_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Product)55_storage)dyn_storage": {
								"base": "t_struct(Product)55_storage",
								"encoding": "dynamic_array",
								"label": "struct Structure.Product[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(State)5": {
								"encoding": "inplace",
								"label": "enum Structure.State",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Roles)69_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Structure.Roles)",
								"numberOfBytes": "32",
								"value": "t_struct(Roles)69_storage"
							},
							"t_mapping(t_uint256,t_struct(Product)55_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Structure.Product)",
								"numberOfBytes": "32",
								"value": "t_struct(Product)55_storage"
							},
							"t_mapping(t_uint256,t_struct(ProductHistory)60_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Structure.ProductHistory)",
								"numberOfBytes": "32",
								"value": "t_struct(ProductHistory)60_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(CustomerDetail)21_storage": {
								"encoding": "inplace",
								"label": "struct Structure.CustomerDetail",
								"members": [
									{
										"astId": 20,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "customer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(DistributorDetail)15_storage": {
								"encoding": "inplace",
								"label": "struct Structure.DistributorDetail",
								"members": [
									{
										"astId": 14,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "distributor",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(FarmerDetail)12_storage": {
								"encoding": "inplace",
								"label": "struct Structure.FarmerDetail",
								"members": [
									{
										"astId": 7,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "farmer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 9,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "farmerName",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 11,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "farmerAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Product)55_storage": {
								"encoding": "inplace",
								"label": "struct Structure.Product",
								"members": [
									{
										"astId": 30,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "uid",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 32,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "sku",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 34,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "owner",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 37,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "productState",
										"offset": 20,
										"slot": "2",
										"type": "t_enum(State)5"
									},
									{
										"astId": 40,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "productdetail",
										"offset": 0,
										"slot": "3",
										"type": "t_struct(ProductDetail)28_storage"
									},
									{
										"astId": 43,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "farmer",
										"offset": 0,
										"slot": "6",
										"type": "t_struct(FarmerDetail)12_storage"
									},
									{
										"astId": 46,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "distributor",
										"offset": 0,
										"slot": "9",
										"type": "t_struct(DistributorDetail)15_storage"
									},
									{
										"astId": 49,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "retailer",
										"offset": 0,
										"slot": "10",
										"type": "t_struct(RetailerDetail)18_storage"
									},
									{
										"astId": 52,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "customer",
										"offset": 0,
										"slot": "11",
										"type": "t_struct(CustomerDetail)21_storage"
									},
									{
										"astId": 54,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "transaction",
										"offset": 0,
										"slot": "12",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "416"
							},
							"t_struct(ProductDetail)28_storage": {
								"encoding": "inplace",
								"label": "struct Structure.ProductDetail",
								"members": [
									{
										"astId": 23,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "productName",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 25,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "productCode",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 27,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "productPrice",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(ProductHistory)60_storage": {
								"encoding": "inplace",
								"label": "struct Structure.ProductHistory",
								"members": [
									{
										"astId": 59,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "history",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_struct(Product)55_storage)dyn_storage"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(RetailerDetail)18_storage": {
								"encoding": "inplace",
								"label": "struct Structure.RetailerDetail",
								"members": [
									{
										"astId": 17,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "retailer",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Roles)69_storage": {
								"encoding": "inplace",
								"label": "struct Structure.Roles",
								"members": [
									{
										"astId": 62,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "Farmer",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 64,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "Distributor",
										"offset": 1,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 66,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "Retailer",
										"offset": 2,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 68,
										"contract": "SupplyChain.sol:SupplyChain",
										"label": "Customer",
										"offset": 3,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 262,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Structure.sol": {
				"ast": {
					"absolutePath": "Structure.sol",
					"exportedSymbols": {
						"Structure": [
							70
						]
					},
					"id": 71,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "Structure",
							"nameLocation": "82:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Structure.State",
									"id": 5,
									"members": [
										{
											"id": 2,
											"name": "ProducedByFarmer",
											"nameLocation": "119:16:0",
											"nodeType": "EnumValue",
											"src": "119:16:0"
										},
										{
											"id": 3,
											"name": "PurchaseByDistributor",
											"nameLocation": "146:21:0",
											"nodeType": "EnumValue",
											"src": "146:21:0"
										},
										{
											"id": 4,
											"name": "ShippedByFarmer",
											"nameLocation": "178:15:0",
											"nodeType": "EnumValue",
											"src": "178:15:0"
										}
									],
									"name": "State",
									"nameLocation": "103:5:0",
									"nodeType": "EnumDefinition",
									"src": "98:102:0"
								},
								{
									"canonicalName": "Structure.FarmerDetail",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "farmer",
											"nameLocation": "246:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "238:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 6,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "238:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "farmerName",
											"nameLocation": "270:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "263:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 8,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "263:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "farmerAddress",
											"nameLocation": "298:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "291:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 10,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "291:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FarmerDetail",
									"nameLocation": "215:12:0",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "208:111:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structure.DistributorDetail",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 14,
											"mutability": "mutable",
											"name": "distributor",
											"nameLocation": "370:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "362:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 13,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "362:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DistributorDetail",
									"nameLocation": "334:17:0",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "327:62:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structure.RetailerDetail",
									"id": 18,
									"members": [
										{
											"constant": false,
											"id": 17,
											"mutability": "mutable",
											"name": "retailer",
											"nameLocation": "437:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 18,
											"src": "429:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 16,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "429:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RetailerDetail",
									"nameLocation": "404:14:0",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "397:56:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structure.CustomerDetail",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "customer",
											"nameLocation": "501:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "493:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 19,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "493:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CustomerDetail",
									"nameLocation": "468:14:0",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "461:56:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structure.ProductDetail",
									"id": 28,
									"members": [
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "productName",
											"nameLocation": "563:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "556:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 22,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "556:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 25,
											"mutability": "mutable",
											"name": "productCode",
											"nameLocation": "593:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "585:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 24,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "585:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 27,
											"mutability": "mutable",
											"name": "productPrice",
											"nameLocation": "623:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 28,
											"src": "615:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 26,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "615:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ProductDetail",
									"nameLocation": "532:13:0",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "525:118:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structure.Product",
									"id": 55,
									"members": [
										{
											"constant": false,
											"id": 30,
											"mutability": "mutable",
											"name": "uid",
											"nameLocation": "685:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "677:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 29,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "677:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 32,
											"mutability": "mutable",
											"name": "sku",
											"nameLocation": "707:3:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "699:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 31,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "699:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "729:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "721:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 33,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "721:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 37,
											"mutability": "mutable",
											"name": "productState",
											"nameLocation": "751:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "745:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_State_$5",
												"typeString": "enum Structure.State"
											},
											"typeName": {
												"id": 36,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 35,
													"name": "State",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 5,
													"src": "745:5:0"
												},
												"referencedDeclaration": 5,
												"src": "745:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_State_$5",
													"typeString": "enum Structure.State"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 40,
											"mutability": "mutable",
											"name": "productdetail",
											"nameLocation": "788:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "774:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ProductDetail_$28_storage_ptr",
												"typeString": "struct Structure.ProductDetail"
											},
											"typeName": {
												"id": 39,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 38,
													"name": "ProductDetail",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 28,
													"src": "774:13:0"
												},
												"referencedDeclaration": 28,
												"src": "774:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProductDetail_$28_storage_ptr",
													"typeString": "struct Structure.ProductDetail"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "farmer",
											"nameLocation": "825:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "812:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FarmerDetail_$12_storage_ptr",
												"typeString": "struct Structure.FarmerDetail"
											},
											"typeName": {
												"id": 42,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 41,
													"name": "FarmerDetail",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 12,
													"src": "812:12:0"
												},
												"referencedDeclaration": 12,
												"src": "812:12:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FarmerDetail_$12_storage_ptr",
													"typeString": "struct Structure.FarmerDetail"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 46,
											"mutability": "mutable",
											"name": "distributor",
											"nameLocation": "860:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "842:29:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DistributorDetail_$15_storage_ptr",
												"typeString": "struct Structure.DistributorDetail"
											},
											"typeName": {
												"id": 45,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 44,
													"name": "DistributorDetail",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 15,
													"src": "842:17:0"
												},
												"referencedDeclaration": 15,
												"src": "842:17:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DistributorDetail_$15_storage_ptr",
													"typeString": "struct Structure.DistributorDetail"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 49,
											"mutability": "mutable",
											"name": "retailer",
											"nameLocation": "897:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "882:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RetailerDetail_$18_storage_ptr",
												"typeString": "struct Structure.RetailerDetail"
											},
											"typeName": {
												"id": 48,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 47,
													"name": "RetailerDetail",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 18,
													"src": "882:14:0"
												},
												"referencedDeclaration": 18,
												"src": "882:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RetailerDetail_$18_storage_ptr",
													"typeString": "struct Structure.RetailerDetail"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 52,
											"mutability": "mutable",
											"name": "customer",
											"nameLocation": "931:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "916:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CustomerDetail_$21_storage_ptr",
												"typeString": "struct Structure.CustomerDetail"
											},
											"typeName": {
												"id": 51,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 50,
													"name": "CustomerDetail",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 21,
													"src": "916:14:0"
												},
												"referencedDeclaration": 21,
												"src": "916:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CustomerDetail_$21_storage_ptr",
													"typeString": "struct Structure.CustomerDetail"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 54,
											"mutability": "mutable",
											"name": "transaction",
											"nameLocation": "957:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 55,
											"src": "950:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 53,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "950:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Product",
									"nameLocation": "658:7:0",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "651:325:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structure.ProductHistory",
									"id": 60,
									"members": [
										{
											"constant": false,
											"id": 59,
											"mutability": "mutable",
											"name": "history",
											"nameLocation": "1027:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 60,
											"src": "1017:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Product_$55_storage_$dyn_storage_ptr",
												"typeString": "struct Structure.Product[]"
											},
											"typeName": {
												"baseType": {
													"id": 57,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 56,
														"name": "Product",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 55,
														"src": "1017:7:0"
													},
													"referencedDeclaration": 55,
													"src": "1017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Product_$55_storage_ptr",
														"typeString": "struct Structure.Product"
													}
												},
												"id": 58,
												"nodeType": "ArrayTypeName",
												"src": "1017:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Product_$55_storage_$dyn_storage_ptr",
													"typeString": "struct Structure.Product[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ProductHistory",
									"nameLocation": "991:14:0",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "984:58:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Structure.Roles",
									"id": 69,
									"members": [
										{
											"constant": false,
											"id": 62,
											"mutability": "mutable",
											"name": "Farmer",
											"nameLocation": "1079:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 69,
											"src": "1074:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 61,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1074:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 64,
											"mutability": "mutable",
											"name": "Distributor",
											"nameLocation": "1101:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 69,
											"src": "1096:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 63,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1096:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "Retailer",
											"nameLocation": "1128:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 69,
											"src": "1123:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 65,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1123:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 68,
											"mutability": "mutable",
											"name": "Customer",
											"nameLocation": "1152:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 69,
											"src": "1147:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 67,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1147:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Roles",
									"nameLocation": "1057:5:0",
									"nodeType": "StructDefinition",
									"scope": 70,
									"src": "1050:118:0",
									"visibility": "public"
								}
							],
							"scope": 71,
							"src": "74:1097:0",
							"usedErrors": []
						}
					],
					"src": "39:1132:0"
				},
				"id": 0
			},
			"SupplyChain.sol": {
				"ast": {
					"absolutePath": "SupplyChain.sol",
					"exportedSymbols": {
						"Context": [
							389
						],
						"Ownable": [
							367
						],
						"Structure": [
							70
						],
						"SupplyChain": [
							254
						]
					},
					"id": 255,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 72,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:1"
						},
						{
							"absolutePath": "Structure.sol",
							"file": "./Structure.sol",
							"id": 73,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 71,
							"src": "74:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
							"id": 74,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 368,
							"src": "101:105:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 75,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 367,
										"src": "234:7:1"
									},
									"id": 76,
									"nodeType": "InheritanceSpecifier",
									"src": "234:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 254,
							"linearizedBaseContracts": [
								254,
								367,
								389
							],
							"name": "SupplyChain",
							"nameLocation": "219:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f514ce36",
									"id": 78,
									"mutability": "mutable",
									"name": "uid",
									"nameLocation": "283:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "268:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "268:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 80,
									"mutability": "mutable",
									"name": "sku",
									"nameLocation": "309:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "293:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 79,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "products",
									"nameLocation": "359:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "321:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$55_storage_$",
										"typeString": "mapping(uint256 => struct Structure.Product)"
									},
									"typeName": {
										"id": 84,
										"keyType": {
											"id": 81,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "329:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "321:37:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$55_storage_$",
											"typeString": "mapping(uint256 => struct Structure.Product)"
										},
										"valueType": {
											"id": 83,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 82,
												"name": "Structure.Product",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 55,
												"src": "340:17:1"
											},
											"referencedDeclaration": 55,
											"src": "340:17:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Product_$55_storage_ptr",
												"typeString": "struct Structure.Product"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "productHistory",
									"nameLocation": "419:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "374:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductHistory_$60_storage_$",
										"typeString": "mapping(uint256 => struct Structure.ProductHistory)"
									},
									"typeName": {
										"id": 89,
										"keyType": {
											"id": 86,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "382:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "374:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProductHistory_$60_storage_$",
											"typeString": "mapping(uint256 => struct Structure.ProductHistory)"
										},
										"valueType": {
											"id": 88,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 87,
												"name": "Structure.ProductHistory",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 60,
												"src": "393:24:1"
											},
											"referencedDeclaration": 60,
											"src": "393:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ProductHistory_$60_storage_ptr",
												"typeString": "struct Structure.ProductHistory"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 95,
									"mutability": "mutable",
									"name": "roles",
									"nameLocation": "476:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "440:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$69_storage_$",
										"typeString": "mapping(address => struct Structure.Roles)"
									},
									"typeName": {
										"id": 94,
										"keyType": {
											"id": 91,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "448:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "440:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$69_storage_$",
											"typeString": "mapping(address => struct Structure.Roles)"
										},
										"valueType": {
											"id": 93,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 92,
												"name": "Structure.Roles",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 69,
												"src": "459:15:1"
											},
											"referencedDeclaration": 69,
											"src": "459:15:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Roles_$69_storage_ptr",
												"typeString": "struct Structure.Roles"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "511:44:1",
										"statements": [
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 98,
														"name": "sku",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "522:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "528:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "522:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "522:7:1"
											},
											{
												"expression": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 102,
														"name": "uid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "540:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "546:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "540:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "540:7:1"
											}
										]
									},
									"id": 107,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:0:1"
									},
									"scope": 254,
									"src": "490:65:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 111,
									"name": "FarmerAdded",
									"nameLocation": "622:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "650:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "634:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:26:1"
									},
									"src": "616:44:1"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "736:90:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 119,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "755:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "775:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "767:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 120,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "767:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "767:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "755:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "747:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "747:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "747:31:1"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 127,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "796:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$69_storage_$",
																"typeString": "mapping(address => struct Structure.Roles storage ref)"
															}
														},
														"id": 129,
														"indexExpression": {
															"id": 128,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "802:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "796:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Roles_$69_storage",
															"typeString": "struct Structure.Roles storage ref"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "Farmer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 62,
													"src": "796:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 117,
												"id": 131,
												"nodeType": "Return",
												"src": "789:29:1"
											}
										]
									},
									"functionSelector": "fcec18bf",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasFarmerRole",
									"nameLocation": "677:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "699:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "691:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:18:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "730:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "730:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:6:1"
									},
									"scope": 254,
									"src": "668:158:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "882:173:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 139,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "901:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "921:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "913:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 140,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "913:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "913:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "901:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "893:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "893:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "893:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "943:24:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 149,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "958:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 148,
																	"name": "hasFarmerRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 133,
																	"src": "944:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "944:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "935:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "935:33:1"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 154,
																"name": "roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "981:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Roles_$69_storage_$",
																	"typeString": "mapping(address => struct Structure.Roles storage ref)"
																}
															},
															"id": 156,
															"indexExpression": {
																"id": 155,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "987:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "981:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Roles_$69_storage",
																"typeString": "struct Structure.Roles storage ref"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "Farmer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "981:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "981:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "981:29:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 162,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 135,
															"src": "1038:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "FarmerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1026:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1026:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "EmitStatement",
												"src": "1021:26:1"
											}
										]
									},
									"functionSelector": "f61104b8",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addFarmerRole",
									"nameLocation": "843:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "865:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "857:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "857:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:18:1"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "882:0:1"
									},
									"scope": 254,
									"src": "834:221:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 170,
									"name": "ProducedByFarmer",
									"nameLocation": "1177:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"indexed": false,
												"mutability": "mutable",
												"name": "uid",
												"nameLocation": "1202:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1194:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1193:13:1"
									},
									"src": "1171:36:1"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1255:103:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$5",
																"typeString": "enum Structure.State"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 175,
																		"name": "products",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1274:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$55_storage_$",
																			"typeString": "mapping(uint256 => struct Structure.Product storage ref)"
																		}
																	},
																	"id": 177,
																	"indexExpression": {
																		"id": 176,
																		"name": "_uid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "1283:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1274:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Product_$55_storage",
																		"typeString": "struct Structure.Product storage ref"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "productState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 37,
																"src": "1274:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$5",
																	"typeString": "enum Structure.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 179,
																		"name": "Structure",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "1305:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Structure_$70_$",
																			"typeString": "type(library Structure)"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "State",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "1305:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																		"typeString": "type(enum Structure.State)"
																	}
																},
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "ProducedByFarmer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2,
																"src": "1305:32:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$5",
																	"typeString": "enum Structure.State"
																}
															},
															"src": "1274:63:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 174,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1266:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1266:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "1266:72:1"
											},
											{
												"id": 185,
												"nodeType": "PlaceholderStatement",
												"src": "1349:1:1"
											}
										]
									},
									"id": 187,
									"name": "producedByFarmer",
									"nameLocation": "1224:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "_uid",
												"nameLocation": "1249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1241:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:14:1"
									},
									"src": "1215:143:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "1405:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_State_$5",
																"typeString": "enum Structure.State"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 192,
																		"name": "products",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1424:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Product_$55_storage_$",
																			"typeString": "mapping(uint256 => struct Structure.Product storage ref)"
																		}
																	},
																	"id": 194,
																	"indexExpression": {
																		"id": 193,
																		"name": "_uid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "1433:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1424:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Product_$55_storage",
																		"typeString": "struct Structure.Product storage ref"
																	}
																},
																"id": 195,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "productState",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 37,
																"src": "1424:27:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$5",
																	"typeString": "enum Structure.State"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 196,
																		"name": "Structure",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 70,
																		"src": "1455:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Structure_$70_$",
																			"typeString": "type(library Structure)"
																		}
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "State",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "1455:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_State_$5_$",
																		"typeString": "type(enum Structure.State)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "ShippedByFarmer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1455:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_State_$5",
																	"typeString": "enum Structure.State"
																}
															},
															"src": "1424:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1416:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1416:71:1"
											},
											{
												"id": 202,
												"nodeType": "PlaceholderStatement",
												"src": "1498:1:1"
											}
										]
									},
									"id": 204,
									"name": "shippedByFarmer",
									"nameLocation": "1375:15:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "_uid",
												"nameLocation": "1399:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "1391:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1390:14:1"
									},
									"src": "1366:141:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1706:324:1",
										"statements": [
											{
												"assignments": [
													211
												],
												"declarations": [
													{
														"constant": false,
														"id": 211,
														"mutability": "mutable",
														"name": "distributor",
														"nameLocation": "1725:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "1717:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 210,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1717:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 212,
												"nodeType": "VariableDeclarationStatement",
												"src": "1717:19:1"
											},
											{
												"assignments": [
													214
												],
												"declarations": [
													{
														"constant": false,
														"id": 214,
														"mutability": "mutable",
														"name": "retailer",
														"nameLocation": "1755:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "1747:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 213,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1747:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 215,
												"nodeType": "VariableDeclarationStatement",
												"src": "1747:16:1"
											},
											{
												"assignments": [
													217
												],
												"declarations": [
													{
														"constant": false,
														"id": 217,
														"mutability": "mutable",
														"name": "customer",
														"nameLocation": "1782:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "1774:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 216,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1774:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 218,
												"nodeType": "VariableDeclarationStatement",
												"src": "1774:16:1"
											},
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "transaction",
														"nameLocation": "1815:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "1801:25:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 219,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1801:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 221,
												"nodeType": "VariableDeclarationStatement",
												"src": "1801:25:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 222,
																"name": "product",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "1839:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$55_memory_ptr",
																	"typeString": "struct Structure.Product memory"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "distributor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 46,
															"src": "1839:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DistributorDetail_$15_memory_ptr",
																"typeString": "struct Structure.DistributorDetail memory"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "distributor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 14,
														"src": "1839:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 227,
														"name": "distributor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1873:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1839:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "1839:45:1"
											},
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 230,
																"name": "product",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "1895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$55_memory_ptr",
																	"typeString": "struct Structure.Product memory"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "retailer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 49,
															"src": "1895:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RetailerDetail_$18_memory_ptr",
																"typeString": "struct Structure.RetailerDetail memory"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "retailer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "1895:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 235,
														"name": "retailer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1923:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1895:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1895:36:1"
											},
											{
												"expression": {
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 238,
																"name": "product",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "1942:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Product_$55_memory_ptr",
																	"typeString": "struct Structure.Product memory"
																}
															},
															"id": 241,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "customer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 52,
															"src": "1942:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CustomerDetail_$21_memory_ptr",
																"typeString": "struct Structure.CustomerDetail memory"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "customer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "1942:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 243,
														"name": "customer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1970:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1942:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "1942:36:1"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 246,
															"name": "product",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "1989:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Product_$55_memory_ptr",
																"typeString": "struct Structure.Product memory"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "transaction",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "1989:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 249,
														"name": "transaction",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "2011:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1989:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "1989:33:1"
											}
										]
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initEmptyProductInfo",
									"nameLocation": "1638:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "product",
												"nameLocation": "1684:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1659:32:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Product_$55_memory_ptr",
													"typeString": "struct Structure.Product"
												},
												"typeName": {
													"id": 206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 205,
														"name": "Structure.Product",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 55,
														"src": "1659:17:1"
													},
													"referencedDeclaration": 55,
													"src": "1659:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Product_$55_storage_ptr",
														"typeString": "struct Structure.Product"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:34:1"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1706:0:1"
									},
									"scope": 254,
									"src": "1629:401:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 255,
							"src": "210:1823:1",
							"usedErrors": []
						}
					],
					"src": "39:1994:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							389
						],
						"Ownable": [
							367
						]
					},
					"id": 368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 368,
							"sourceUnit": 390,
							"src": "127:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 389,
										"src": "683:7:2"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 258,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 367,
							"linearizedBaseContracts": [
								367,
								389
							],
							"name": "Ownable",
							"nameLocation": "672:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 262,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 367,
									"src": "697:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 261,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 268,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "753:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "784:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:2"
									},
									"src": "726:84:2"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "926:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 273,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "955:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 272,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "936:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "936:32:2"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 278,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:2"
									},
									"scope": 367,
									"src": "912:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "1084:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "1094:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:2"
											},
											{
												"id": 284,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:2"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 286,
									"name": "onlyOwner",
									"nameLocation": "1072:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:2"
									},
									"src": "1063:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "1256:30:2",
										"statements": [
											{
												"expression": {
													"id": 292,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 262,
													"src": "1273:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 291,
												"id": 293,
												"nodeType": "Return",
												"src": "1266:13:2"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1247:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:2"
									},
									"scope": 367,
									"src": "1201:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "1404:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 300,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "1422:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 302,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "1433:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:2"
									},
									"scope": 367,
									"src": "1359:130:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "1885:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 316,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 315,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1895:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:2"
											}
										]
									},
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 313,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 312,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 286,
												"src": "1875:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:2"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:2"
									},
									"scope": 367,
									"src": "1831:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "2151:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "2169:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2263:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 341,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2244:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:2"
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 329,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 328,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 286,
												"src": "2141:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "2108:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:2"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:2"
									},
									"scope": 367,
									"src": "2081:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2496:124:2",
										"statements": [
											{
												"assignments": [
													353
												],
												"declarations": [
													{
														"constant": false,
														"id": 353,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 365,
														"src": "2506:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 352,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 355,
												"initialValue": {
													"id": 354,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 262,
													"src": "2525:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:2"
											},
											{
												"expression": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 356,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "2541:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 357,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "2550:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 361,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "2594:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 362,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2604:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 360,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2573:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "EmitStatement",
												"src": "2568:45:2"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2461:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:2"
									},
									"scope": 367,
									"src": "2433:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 368,
							"src": "654:1968:2",
							"usedErrors": []
						}
					],
					"src": "102:2521:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							389
						]
					},
					"id": 390,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 369,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 370,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 375,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 374,
												"id": 377,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 389,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 384,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 383,
												"id": 386,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 389,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 390,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			}
		}
	}
}